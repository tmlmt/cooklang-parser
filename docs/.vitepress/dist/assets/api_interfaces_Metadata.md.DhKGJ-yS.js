import{_ as o,c as t,o as a,af as i}from"./chunks/framework.ChobL-AU.js";const f=JSON.parse('{"title":"Interface: Metadata","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/Metadata.md","filePath":"api/interfaces/Metadata.md"}'),r={name:"api/interfaces/Metadata.md"};function n(c,e,s,d,p,l){return a(),t("div",null,e[0]||(e[0]=[i('<p><a href="./../globals.html">cooklang-parser</a> / Metadata</p><h1 id="interface-metadata" tabindex="-1">Interface: Metadata <a class="header-anchor" href="#interface-metadata" aria-label="Permalink to “Interface: Metadata”">​</a></h1><p>Defined in: types.ts:7</p><p>Represents the metadata of a recipe.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to “Properties”">​</a></h2><h3 id="author" tabindex="-1">author? <a class="header-anchor" href="#author" aria-label="Permalink to “author?”">​</a></h3><blockquote><p><code>optional</code> <strong>author</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:15</p><p>The author of the recipe.</p><hr><h3 id="category" tabindex="-1">category? <a class="header-anchor" href="#category" aria-label="Permalink to “category?”">​</a></h3><blockquote><p><code>optional</code> <strong>category</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:33</p><p>The category of the recipe.</p><hr><h3 id="cook-time" tabindex="-1">cook time? <a class="header-anchor" href="#cook-time" aria-label="Permalink to “cook time?”">​</a></h3><blockquote><p><code>optional</code> <strong>cook time</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:47</p><p>The cooking time of the recipe. Will not be further parsed into any DateTime format nor normalize</p><hr><h3 id="course" tabindex="-1">course? <a class="header-anchor" href="#course" aria-label="Permalink to “course?”">​</a></h3><blockquote><p><code>optional</code> <strong>course</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:31</p><p>The course of the recipe.</p><hr><h3 id="cuisine" tabindex="-1">cuisine? <a class="header-anchor" href="#cuisine" aria-label="Permalink to “cuisine?”">​</a></h3><blockquote><p><code>optional</code> <strong>cuisine</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:68</p><p>The cuisine of the recipe.</p><hr><h3 id="description" tabindex="-1">description? <a class="header-anchor" href="#description" aria-label="Permalink to “description?”">​</a></h3><blockquote><p><code>optional</code> <strong>description</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:72</p><p>The description of the recipe.</p><hr><h3 id="diet" tabindex="-1">diet? <a class="header-anchor" href="#diet" aria-label="Permalink to “diet?”">​</a></h3><blockquote><p><code>optional</code> <strong>diet</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:70</p><p>The diet of the recipe.</p><hr><h3 id="difficulty" tabindex="-1">difficulty? <a class="header-anchor" href="#difficulty" aria-label="Permalink to “difficulty?”">​</a></h3><blockquote><p><code>optional</code> <strong>difficulty</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:66</p><p>The difficulty of the recipe.</p><hr><h3 id="duration" tabindex="-1">duration? <a class="header-anchor" href="#duration" aria-label="Permalink to “duration?”">​</a></h3><blockquote><p><code>optional</code> <strong>duration</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:64</p><hr><h3 id="images" tabindex="-1">images? <a class="header-anchor" href="#images" aria-label="Permalink to “images?”">​</a></h3><blockquote><p><code>optional</code> <strong>images</strong>: <code>string</code>[]</p></blockquote><p>Defined in: types.ts:74</p><p>The images of the recipe.</p><hr><h3 id="prep-time" tabindex="-1">prep time? <a class="header-anchor" href="#prep-time" aria-label="Permalink to “prep time?”">​</a></h3><blockquote><p><code>optional</code> <strong>prep time</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:38</p><p>The preparation time of the recipe. Will not be further parsed into any DateTime format nor normalize</p><hr><h3 id="serves" tabindex="-1">serves? <a class="header-anchor" href="#serves" aria-label="Permalink to “serves?”">​</a></h3><blockquote><p><code>optional</code> <strong>serves</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:29</p><p>The number of people the recipe serves. Complex info can be given, as long as the first part before a comma has a numerical value, which will be used for scaling Interchangeable with <code>servings</code> or <code>yield</code>. If multiple ones are defined, the latest one will be used for scaling</p><hr><h3 id="servings" tabindex="-1">servings? <a class="header-anchor" href="#servings" aria-label="Permalink to “servings?”">​</a></h3><blockquote><p><code>optional</code> <strong>servings</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:19</p><p>The number of servings the recipe makes. Complex info can be given, as long as the first part before a comma has a numerical value, which will be used for scaling Interchangeable with <code>yield</code> or <code>serves</code>. If multiple ones are defined, the latest one will be used for scaling</p><hr><h3 id="source" tabindex="-1">source? <a class="header-anchor" href="#source" aria-label="Permalink to “source?”">​</a></h3><blockquote><p><code>optional</code> <strong>source</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:13</p><p>The source of the recipe.</p><hr><h3 id="tags" tabindex="-1">tags? <a class="header-anchor" href="#tags" aria-label="Permalink to “tags?”">​</a></h3><blockquote><p><code>optional</code> <strong>tags</strong>: <code>string</code>[]</p></blockquote><p>Defined in: types.ts:11</p><p>The tags of the recipe.</p><hr><h3 id="time" tabindex="-1">time? <a class="header-anchor" href="#time" aria-label="Permalink to “time?”">​</a></h3><blockquote><p><code>optional</code> <strong>time</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:60</p><hr><h3 id="time-required" tabindex="-1">time required? <a class="header-anchor" href="#time-required" aria-label="Permalink to “time required?”">​</a></h3><blockquote><p><code>optional</code> <strong>time required</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:56</p><p>The total time of the recipe. Will not be further parsed into any DateTime format nor normalize</p><hr><h3 id="time-cook" tabindex="-1">time.cook? <a class="header-anchor" href="#time-cook" aria-label="Permalink to “time.cook?”">​</a></h3><blockquote><p><code>optional</code> <strong>time.cook</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:51</p><p>Alias of <code>cook time</code></p><hr><h3 id="time-prep" tabindex="-1">time.prep? <a class="header-anchor" href="#time-prep" aria-label="Permalink to “time.prep?”">​</a></h3><blockquote><p><code>optional</code> <strong>time.prep</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:42</p><p>Alias of <code>prep time</code></p><hr><h3 id="title" tabindex="-1">title? <a class="header-anchor" href="#title" aria-label="Permalink to “title?”">​</a></h3><blockquote><p><code>optional</code> <strong>title</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:9</p><p>The title of the recipe.</p><hr><h3 id="yield" tabindex="-1">yield? <a class="header-anchor" href="#yield" aria-label="Permalink to “yield?”">​</a></h3><blockquote><p><code>optional</code> <strong>yield</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:24</p><p>The yield of the recipe. Complex info can be given, as long as the first part before a comma has a numerical value, which will be used for scaling Interchangeable with <code>servings</code> or <code>serves</code>. If multiple ones are defined, the latest one will be used for scaling</p>',107)]))}const b=o(r,[["render",n]]);export{f as __pageData,b as default};
