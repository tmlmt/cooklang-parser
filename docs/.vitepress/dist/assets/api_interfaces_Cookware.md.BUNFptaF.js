import{_ as a,c as o,o as r,af as t}from"./chunks/framework.ChobL-AU.js";const f=JSON.parse('{"title":"Interface: Cookware","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/Cookware.md","filePath":"api/interfaces/Cookware.md"}'),n={name:"api/interfaces/Cookware.md"};function i(p,e,c,s,d,l){return r(),o("div",null,e[0]||(e[0]=[t('<p><a href="./../globals.html">cooklang-parser</a> / Cookware</p><h1 id="interface-cookware" tabindex="-1">Interface: Cookware <a class="header-anchor" href="#interface-cookware" aria-label="Permalink to “Interface: Cookware”">​</a></h1><p>Defined in: types.ts:194</p><p>Represents a piece of cookware in a recipe.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to “Properties”">​</a></h2><h3 id="hidden" tabindex="-1">hidden? <a class="header-anchor" href="#hidden" aria-label="Permalink to “hidden?”">​</a></h3><blockquote><p><code>optional</code> <strong>hidden</strong>: <code>boolean</code></p></blockquote><p>Defined in: types.ts:200</p><p>Whether the cookware is hidden.</p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to “name”">​</a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:196</p><p>The name of the cookware.</p><hr><h3 id="optional" tabindex="-1">optional? <a class="header-anchor" href="#optional" aria-label="Permalink to “optional?”">​</a></h3><blockquote><p><code>optional</code> <strong>optional</strong>: <code>boolean</code></p></blockquote><p>Defined in: types.ts:198</p><p>Whether the cookware is optional.</p>',19)]))}const k=a(n,[["render",i]]);export{f as __pageData,k as default};
