import{_ as a,c as r,o as s,af as t}from"./chunks/framework.ChobL-AU.js";const b=JSON.parse('{"title":"Class: Recipe","description":"","frontmatter":{},"headers":[],"relativePath":"api/classes/Recipe.md","filePath":"api/classes/Recipe.md"}'),o={name:"api/classes/Recipe.md"};function c(n,e,i,l,h,d){return s(),r("div",null,e[0]||(e[0]=[t('<p><a href="./../globals.html">cooklang-parser</a> / Recipe</p><h1 id="class-recipe" tabindex="-1">Class: Recipe <a class="header-anchor" href="#class-recipe" aria-label="Permalink to “Class: Recipe”">​</a></h1><p>Defined in: classes/recipe.ts:31</p><p>Represents a recipe.</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to “Constructors”">​</a></h2><h3 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to “Constructor”">​</a></h3><blockquote><p><strong>new Recipe</strong>(<code>content?</code>): <code>Recipe</code></p></blockquote><p>Defined in: classes/recipe.ts:66</p><p>Creates a new Recipe instance.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h4><h5 id="content" tabindex="-1">content? <a class="header-anchor" href="#content" aria-label="Permalink to “content?”">​</a></h5><p><code>string</code></p><p>The recipe content to parse.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h4><p><code>Recipe</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to “Properties”">​</a></h2><h3 id="cookware" tabindex="-1">cookware <a class="header-anchor" href="#cookware" aria-label="Permalink to “cookware”">​</a></h3><blockquote><p><strong>cookware</strong>: <a href="./../interfaces/Cookware.html"><code>Cookware</code></a>[] = <code>[]</code></p></blockquote><p>Defined in: classes/recipe.ts:51</p><p>The recipe&#39;s cookware.</p><h4 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to “See”">​</a></h4><p><a href="./../interfaces/Cookware.html">Cookware</a></p><hr><h3 id="ingredients" tabindex="-1">ingredients <a class="header-anchor" href="#ingredients" aria-label="Permalink to “ingredients”">​</a></h3><blockquote><p><strong>ingredients</strong>: <a href="./../interfaces/Ingredient.html"><code>Ingredient</code></a>[] = <code>[]</code></p></blockquote><p>Defined in: classes/recipe.ts:41</p><p>The recipe&#39;s ingredients.</p><h4 id="see-1" tabindex="-1">See <a class="header-anchor" href="#see-1" aria-label="Permalink to “See”">​</a></h4><p><a href="./../interfaces/Ingredient.html">Ingredient</a></p><hr><h3 id="metadata" tabindex="-1">metadata <a class="header-anchor" href="#metadata" aria-label="Permalink to “metadata”">​</a></h3><blockquote><p><strong>metadata</strong>: <a href="./../interfaces/Metadata.html"><code>Metadata</code></a> = <code>{}</code></p></blockquote><p>Defined in: classes/recipe.ts:36</p><p>The recipe&#39;s metadata.</p><h4 id="see-2" tabindex="-1">See <a class="header-anchor" href="#see-2" aria-label="Permalink to “See”">​</a></h4><p><a href="./../interfaces/Metadata.html">Metadata</a></p><hr><h3 id="sections" tabindex="-1">sections <a class="header-anchor" href="#sections" aria-label="Permalink to “sections”">​</a></h3><blockquote><p><strong>sections</strong>: <code>Section</code>[] = <code>[]</code></p></blockquote><p>Defined in: classes/recipe.ts:46</p><p>The recipe&#39;s sections.</p><h4 id="see-3" tabindex="-1">See <a class="header-anchor" href="#see-3" aria-label="Permalink to “See”">​</a></h4><p>Section</p><hr><h3 id="servings" tabindex="-1">servings? <a class="header-anchor" href="#servings" aria-label="Permalink to “servings?”">​</a></h3><blockquote><p><code>optional</code> <strong>servings</strong>: <code>number</code></p></blockquote><p>Defined in: classes/recipe.ts:60</p><p>The recipe&#39;s servings. Used for scaling</p><hr><h3 id="timers" tabindex="-1">timers <a class="header-anchor" href="#timers" aria-label="Permalink to “timers”">​</a></h3><blockquote><p><strong>timers</strong>: <a href="./../interfaces/Timer.html"><code>Timer</code></a>[] = <code>[]</code></p></blockquote><p>Defined in: classes/recipe.ts:56</p><p>The recipe&#39;s timers.</p><h4 id="see-4" tabindex="-1">See <a class="header-anchor" href="#see-4" aria-label="Permalink to “See”">​</a></h4><p><a href="./../interfaces/Timer.html">Timer</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to “Methods”">​</a></h2><h3 id="clone" tabindex="-1">clone() <a class="header-anchor" href="#clone" aria-label="Permalink to “clone()”">​</a></h3><blockquote><p><strong>clone</strong>(): <code>Recipe</code></p></blockquote><p>Defined in: classes/recipe.ts:311</p><p>Clones the recipe.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to “Returns”">​</a></h4><p><code>Recipe</code></p><p>A new Recipe instance with the same properties.</p><hr><h3 id="parse" tabindex="-1">parse() <a class="header-anchor" href="#parse" aria-label="Permalink to “parse()”">​</a></h3><blockquote><p><strong>parse</strong>(<code>content</code>): <code>void</code></p></blockquote><p>Defined in: classes/recipe.ts:76</p><p>Parses a recipe from a string.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to “Parameters”">​</a></h4><h5 id="content-1" tabindex="-1">content <a class="header-anchor" href="#content-1" aria-label="Permalink to “content”">​</a></h5><p><code>string</code></p><p>The recipe content to parse.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to “Returns”">​</a></h4><p><code>void</code></p><hr><h3 id="scaleby" tabindex="-1">scaleBy() <a class="header-anchor" href="#scaleby" aria-label="Permalink to “scaleBy()”">​</a></h3><blockquote><p><strong>scaleBy</strong>(<code>factor</code>): <code>Recipe</code></p></blockquote><p>Defined in: classes/recipe.ts:256</p><p>Scales the recipe by a factor.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to “Parameters”">​</a></h4><h5 id="factor" tabindex="-1">factor <a class="header-anchor" href="#factor" aria-label="Permalink to “factor”">​</a></h5><p><code>number</code></p><p>The factor to scale the recipe by.</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to “Returns”">​</a></h4><p><code>Recipe</code></p><p>A new Recipe instance with the scaled ingredients.</p><hr><h3 id="scaleto" tabindex="-1">scaleTo() <a class="header-anchor" href="#scaleto" aria-label="Permalink to “scaleTo()”">​</a></h3><blockquote><p><strong>scaleTo</strong>(<code>newServings</code>): <code>Recipe</code></p></blockquote><p>Defined in: classes/recipe.ts:240</p><p>Scales the recipe to a new number of servings.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to “Parameters”">​</a></h4><h5 id="newservings" tabindex="-1">newServings <a class="header-anchor" href="#newservings" aria-label="Permalink to “newServings”">​</a></h5><p><code>number</code></p><p>The new number of servings.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to “Returns”">​</a></h4><p><code>Recipe</code></p><p>A new Recipe instance with the scaled ingredients.</p>',98)]))}const m=a(o,[["render",c]]);export{b as __pageData,m as default};
