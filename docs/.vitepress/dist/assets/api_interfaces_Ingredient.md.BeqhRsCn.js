import{_ as t,c as n,o as a,af as i}from"./chunks/framework.ChobL-AU.js";const f=JSON.parse('{"title":"Interface: Ingredient","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/Ingredient.md","filePath":"api/interfaces/Ingredient.md"}'),o={name:"api/interfaces/Ingredient.md"};function r(p,e,d,c,s,h){return a(),n("div",null,e[0]||(e[0]=[i('<p><a href="./../globals.html">cooklang-parser</a> / Ingredient</p><h1 id="interface-ingredient" tabindex="-1">Interface: Ingredient <a class="header-anchor" href="#interface-ingredient" aria-label="Permalink to “Interface: Ingredient”">​</a></h1><p>Defined in: types.ts:92</p><p>Represents an ingredient in a recipe.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to “Properties”">​</a></h2><h3 id="hidden" tabindex="-1">hidden? <a class="header-anchor" href="#hidden" aria-label="Permalink to “hidden?”">​</a></h3><blockquote><p><code>optional</code> <strong>hidden</strong>: <code>boolean</code></p></blockquote><p>Defined in: types.ts:104</p><p>Whether the ingredient is hidden.</p><hr><h3 id="isrecipe" tabindex="-1">isRecipe? <a class="header-anchor" href="#isrecipe" aria-label="Permalink to “isRecipe?”">​</a></h3><blockquote><p><code>optional</code> <strong>isRecipe</strong>: <code>boolean</code></p></blockquote><p>Defined in: types.ts:106</p><p>Whether the ingredient is a recipe.</p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to “name”">​</a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:94</p><p>The name of the ingredient.</p><hr><h3 id="optional" tabindex="-1">optional? <a class="header-anchor" href="#optional" aria-label="Permalink to “optional?”">​</a></h3><blockquote><p><code>optional</code> <strong>optional</strong>: <code>boolean</code></p></blockquote><p>Defined in: types.ts:102</p><p>Whether the ingredient is optional.</p><hr><h3 id="preparation" tabindex="-1">preparation? <a class="header-anchor" href="#preparation" aria-label="Permalink to “preparation?”">​</a></h3><blockquote><p><code>optional</code> <strong>preparation</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:100</p><p>The preparation of the ingredient.</p><hr><h3 id="quantity" tabindex="-1">quantity? <a class="header-anchor" href="#quantity" aria-label="Permalink to “quantity?”">​</a></h3><blockquote><p><code>optional</code> <strong>quantity</strong>: <code>string</code> | <code>number</code></p></blockquote><p>Defined in: types.ts:96</p><p>The quantity of the ingredient.</p><hr><h3 id="unit" tabindex="-1">unit? <a class="header-anchor" href="#unit" aria-label="Permalink to “unit?”">​</a></h3><blockquote><p><code>optional</code> <strong>unit</strong>: <code>string</code></p></blockquote><p>Defined in: types.ts:98</p><p>The unit of the ingredient.</p>',39)]))}const g=t(o,[["render",r]]);export{f as __pageData,g as default};
